job "prometheus" {
  datacenters = ["{{ workspace }}"]
  type        = "service"

  group "prometheus" {
    count = 1

    network {
      mode = "bridge"
      dns {
        servers = {{ ovh_master_servers|map(attribute='private_ip')|list|to_json }}
        searches = ["coffreo.cc"]
      }
      port "prometheus_ui" {
        static = 9090
      }
    }
   
    service {
      name = "prometheus"
      port = 9090
      tags = ["monitoring","prometheus"]

      connect {
        sidecar_service {}
      }

      check {
        name     = "Prometheus HTTP"
        type     = "http"
        path     = "/targets"
        interval = "5s"
        timeout  = "2s"

        check_restart {
          limit           = 2
          grace           = "60s"
          ignore_warnings = false
        }
      }
    }

    restart {
      attempts = 3
      delay    = "20s"
      mode     = "delay"
    }

    task "prometheus" {
      driver = "docker"

      template {
        data        = <<EOTC
global:
  scrape_interval: 15s
scrape_configs:
  - job_name: 'self'
    consul_sd_configs:
      - server: '{{ groups[workspace + '_masters'][0] }}:8501'
        scheme: 'https'
    relabel_configs:
      - source_labels: [__meta_consul_node]
        target_label: __host__
        regex: '(.*)-coffreo-cc'
        replacement: '$1.coffreo.cc'
      - source_labels: [__meta_consul_service_metadata_external_source]
        target_label: source
        regex: (.*)
        replacement: '$1'
      - source_labels: [__meta_consul_service_id]
        regex: '_nomad-task-([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12})-.*'
        target_label:  'task_id'
        replacement: '$1'
      - source_labels: [__meta_consul_tags]
        regex: '.*,prometheus,.*'
        action: keep
      - source_labels: [__meta_consul_tags]
        regex: ',(app|monitoring),'
        target_label:  'group'
        replacement:   '$1'
      - source_labels: [__meta_consul_service]
        target_label: job
      - source_labels: ['__meta_consul_node']
        regex:         '(.*)'
        target_label:  'instance'
        replacement:   '$1'
      - source_labels: [__meta_consul_service_id]
        regex: '_nomad-task-([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12})-.*'
        target_label:  '__path__'
        replacement: '/nomad/alloc/$1/alloc/logs/*std*.{?,??}'

  - job_name: 'nomad_metrics'
    scheme: 'https'
    consul_sd_configs:
      - server: '{{ groups[workspace + '_masters'][0] }}:8501' 
        scheme: 'https'
        services: ['nomad-client', 'nomad']
        tls_config:
          insecure_skip_verify: true
    relabel_configs:    
      - source_labels: ['__meta_consul_tags']      
        regex: '(.*)http(.*)'
        action: keep
    scrape_interval: 5s
    metrics_path: /v1/metrics
    params:
      format: ['prometheus']

  - job_name: 'prometheus_metrics'
    static_configs:
    - targets: ['localhost:9090']

EOTC
        destination = "/local/prometheus.yml"
      }
      config {
        image = "prom/prometheus:latest"
        ports = ["prometheus_ui"]
        volumes = [
          "/etc/ssl/certs/ca-certificates.crt:/etc/ssl/certs/ca-certificates.crt",
          "local/prometheus.yml:/etc/prometheus/prometheus.yml"
        ]
      }

      resources {
        cpu    = 200
        memory = 200
      }
    }
  }
}

